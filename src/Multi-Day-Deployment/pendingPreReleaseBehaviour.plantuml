@startuml

entity Signoff as Signoff
entity DeploymentDashboard as DD
participant ReleaseEngine as RE
database gitlab_project_tab as gitDB
database deployment_request_tab as deploymentDB
database deployment_ack_config_tab as ackDB

title Pending Pre-Release Events Behaviour

== for each deployment request in Deployment Sequence ==
group Initialisation
    RE -> ackDB : with jenkins_job\nGET <b>repo
    ackDB -> RE : repo
    
    RE -> gitDB : with repo\nGET pre_release_events
    note right
        We will maintain 
        the array of keys to fetch
        For now:
        - requires_regression_signoff
    end note

    gitDB -> RE : pre_release_events (array)
    RE -> RE : Initialise\npre_release_blockers (map)
    note right
        For each release event
            If release event configured as true
                Append inside list\nof pre-release events
        
        pre_release_blockers = {
            "requires_regression_signoff" : {
                "state" : "Pending"
                "date" : "-"
            },
            ..
        }
    end note

    RE -> deploymentDB: Store map\nof each pre-release event
end group

    deploymentDB -> DD : Display events in popup
    note right
        when user hover over the status
        Pending pre-release events
        the list of pre-release events 
        should be displayed
    end note


group Pending Dev Ack Transitions
    group via external API
        Signoff -> RE : Toggle state via RE API
        RE -> deploymentDB : DB toggle handler
        note right
            contain key & state
        end note
        deploymentDB -> deploymentDB : Update date
        RE -> RE : Trigger state update
    end group
    group via Dashboard UI
        DD -> RE : Via button
        RE -> deploymentDB : DB toggle handler
        note right
            contain key & state
        end note
        deploymentDB -> deploymentDB : Update date
        RE -> RE : Trigger state update
    end group
end group

group State Update
    RE -> deploymentDB : GET pre_release_blockers
    deploymentDB -> RE : pre_release_blockers

    RE -> RE
    note right
        If ALL True
            transition to next state
        else
            pass
    end note
end group

' (*) --> [Enter State] Initialisation

' --> Get row's repo path
' --> [with repo path] Get config data for required events

@enduml